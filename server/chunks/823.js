"use strict";exports.id=823,exports.ids=[823],exports.modules={60170:(e,a,t)=>{t.d(a,{F:()=>n});let n=new(t(41481)).Connection("https://light-wider-bird.solana-mainnet.quiknode.pro/0fa02f9109ca0c0e8a990f73ca03664b2d3e4138","confirmed")},5265:(e,a,t)=>{t.d(a,{vW:()=>m,vN:()=>c,VQ:()=>d,w5:()=>E,nb:()=>v,_U:()=>M,Sp:()=>b,zJ:()=>I,TL:()=>y,BZ:()=>O,B4:()=>p,Vo:()=>S,R3:()=>w,H3:()=>A,we:()=>P,HP:()=>T});var n=t(41481),s=t(56928);let r=JSON.parse('{"version":"0.1.0","name":"staking","instructions":[{"name":"initPool","accounts":[{"name":"stakePool","isMut":true,"isSigner":false},{"name":"escrowFee","isMut":false,"isSigner":false},{"name":"poolTokenAccount","isMut":true,"isSigner":false},{"name":"escrowTokenAccount","isMut":true,"isSigner":false},{"name":"mint","isMut":false,"isSigner":false},{"name":"payerTokenAccount","isMut":true,"isSigner":false},{"name":"payer","isMut":true,"isSigner":true},{"name":"tokenProgram","isMut":false,"isSigner":false},{"name":"associatedTokenProgram","isMut":false,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false}],"args":[{"name":"amount","type":"u64"}]},{"name":"withdrawTokens","accounts":[{"name":"stakePool","isMut":true,"isSigner":false},{"name":"poolTokenAccount","isMut":true,"isSigner":false},{"name":"stakeMint","isMut":false,"isSigner":false},{"name":"user","isMut":true,"isSigner":true},{"name":"userTokenAccount","isMut":true,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false},{"name":"associatedTokenProgram","isMut":false,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false}],"args":[{"name":"amount","type":"u64"}]},{"name":"depositeTokens","accounts":[{"name":"stakePool","isMut":true,"isSigner":false},{"name":"poolTokenAccount","isMut":true,"isSigner":false},{"name":"stakeMint","isMut":false,"isSigner":false},{"name":"user","isMut":true,"isSigner":true},{"name":"userTokenAccount","isMut":true,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false},{"name":"associatedTokenProgram","isMut":false,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false}],"args":[{"name":"amount","type":"u64"}]},{"name":"transferOwner","accounts":[{"name":"stakePool","isMut":true,"isSigner":false},{"name":"user","isMut":true,"isSigner":true},{"name":"systemProgram","isMut":false,"isSigner":false}],"args":[{"name":"newOwner","type":"publicKey"}]},{"name":"initEntry","accounts":[{"name":"stakeEntry","isMut":true,"isSigner":false},{"name":"stakePool","isMut":true,"isSigner":false},{"name":"payer","isMut":true,"isSigner":true},{"name":"systemProgram","isMut":false,"isSigner":false}],"args":[]},{"name":"stakeTokens","accounts":[{"name":"stakePool","isMut":true,"isSigner":false},{"name":"poolTokenAccount","isMut":true,"isSigner":false},{"name":"stakeEntry","isMut":true,"isSigner":false},{"name":"stakeMint","isMut":false,"isSigner":false},{"name":"user","isMut":true,"isSigner":true},{"name":"userTokenAccount","isMut":true,"isSigner":false},{"name":"escrowTokenAccount","isMut":true,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false},{"name":"associatedTokenProgram","isMut":false,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false}],"args":[{"name":"amount","type":"u64"}]},{"name":"unstakeTokens","accounts":[{"name":"stakePool","isMut":true,"isSigner":false},{"name":"poolTokenAccount","isMut":true,"isSigner":false},{"name":"stakeEntry","isMut":true,"isSigner":false},{"name":"stakeMint","isMut":false,"isSigner":false},{"name":"user","isMut":true,"isSigner":true},{"name":"userTokenAccount","isMut":true,"isSigner":false},{"name":"escrowTokenAccount","isMut":true,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false},{"name":"associatedTokenProgram","isMut":false,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false}],"args":[{"name":"amount","type":"u64"}]},{"name":"claimTokens","accounts":[{"name":"stakePool","isMut":true,"isSigner":false},{"name":"poolTokenAccount","isMut":true,"isSigner":false},{"name":"stakeEntry","isMut":true,"isSigner":false},{"name":"stakeMint","isMut":false,"isSigner":false},{"name":"user","isMut":true,"isSigner":true},{"name":"userTokenAccount","isMut":true,"isSigner":false},{"name":"escrowTokenAccount","isMut":true,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false},{"name":"associatedTokenProgram","isMut":false,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false}],"args":[]},{"name":"transferBack","accounts":[{"name":"stakePool","isMut":true,"isSigner":false},{"name":"poolTokenAccount","isMut":true,"isSigner":false},{"name":"stakeEntry","isMut":true,"isSigner":false},{"name":"stakeMint","isMut":false,"isSigner":false},{"name":"user","isMut":true,"isSigner":true},{"name":"receiverTokenAccount","isMut":true,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false},{"name":"associatedTokenProgram","isMut":false,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false}],"args":[]}],"accounts":[{"name":"StakeEntry","type":{"kind":"struct","fields":[{"name":"bump","type":"u8"},{"name":"pool","type":"publicKey"},{"name":"lastStaker","type":"publicKey"},{"name":"lastStakedAt","type":{"option":"i64"}},{"name":"amount","type":"u64"},{"name":"rewards","type":"u64"},{"name":"claimed","type":"u64"}]}},{"name":"StakePool","type":{"kind":"struct","fields":[{"name":"bump","type":"u8"},{"name":"authority","type":"publicKey"},{"name":"totalStaked","type":"u64"},{"name":"totalStakers","type":"u32"},{"name":"mint","type":"publicKey"},{"name":"escrowFee","type":"publicKey"},{"name":"apr","type":"u64"}]}}],"errors":[{"code":6000,"name":"InvalidStakePool","msg":"Invalid stake pool"},{"code":6001,"name":"InvalidStakeEntry","msg":"Invalid stake entry"},{"code":6002,"name":"InvalidAuthority","msg":"Invalid stake pool authority"},{"code":6003,"name":"InvalidEscrow","msg":"Mismatched user and escrow"},{"code":6004,"name":"InvalidStakeMint","msg":"Invalid stake mint"},{"code":6005,"name":"TokensAlreadyStaked","msg":"Tokens Already Staked"},{"code":6006,"name":"InvalidPaymentShare","msg":"Invalid payment share"},{"code":6007,"name":"InvalidPaymentTokenAccount","msg":"Invalid payment token account"},{"code":6008,"name":"InvalidPayerTokenAccount","msg":"Invalid payer token account"},{"code":6009,"name":"InvalidUserStakeMintTokenAccount","msg":"Invalid User Stake Mint Token Account"},{"code":6010,"name":"MinStakeSecondsNotSatisfied","msg":"Minimum stake seconds not satisfied"},{"code":6011,"name":"InvalidUnstakeAmount","msg":"Invalid Unstake Amount"},{"code":6012,"name":"NotEnoughRewards","msg":"Not Enough Rewards"},{"code":6013,"name":"InvalidAmount","msg":"minimum stake amount is 10"}],"metadata":{"address":"5KA8qSGEJ9c8nNnEqcS5G5Wwsc8S7dzVgb49mUU5ZBUi"}}');var o=t(60170),i=t(98448),u=t(90598);let m=new n.PublicKey("51BdrKtMtLhyC7c7LxikLX4z4d433jsmNXaf5t5bYLyb"),c=new n.PublicKey("BCTJnXmpYpmnozJb2eYykzPnVnV8cSABXXd71iJN8s7t"),l=new n.PublicKey("7LqRw17YaP7AKy1NB6vgFWEGKgL9jcEHejiXrYM78p7H"),g=(0,i.Ob)(c,l),d=1e6,k=e=>new s.NQ(o.F,e,{preflightCommitment:"processed"}),y=async e=>{let a=k(e),t=new s.BP(r,r.metadata.address,a);return await t.account.stakePool.all()},f=async(e,a)=>{let t=k(e),n=new s.BP(r,r.metadata.address,t);return await n.account.stakePool.fetch(a)},p=async e=>{let a=k(e),t=new s.BP(r,r.metadata.address,a);return await t.account.stakeEntry.all([{memcmp:{offset:41,bytes:e.publicKey.toString()}}])},S=async(e,a)=>{try{let t=k(e),o=new s.BP(r,r.metadata.address,t),m=n.PublicKey.findProgramAddressSync([s.Wp.ee.As.encode("stake-pool")],o.programId)[0];console.log("stake_pool:",m.toString());let d=await (0,i.Ob)(c,m,!0),y=await (0,i.Ob)(c,e.publicKey),f=await o.methods.initPool(new s.BN(a)).accounts({stakePool:m,poolTokenAccount:d,mint:c,payerTokenAccount:y,payer:e.publicKey,escrowFee:l,escrowTokenAccount:await g,tokenProgram:u.x5,associatedTokenProgram:u.EK,systemProgram:n.SystemProgram.programId}).instruction();return new n.Transaction().add(f)}catch(e){console.log(e)}},w=async(e,a)=>{try{let t=k(e),l=new s.BP(r,r.metadata.address,t),d=await f(e,m),y=new n.Transaction,p=h(m,e?.publicKey),S=await o.F.getAccountInfo(p);if(null===S){let a=await K(e,m,p);y.add(a)}let w=await (0,i.Ob)(d?.mint,m,!0),P=await (0,i.Ob)(d?.mint,e?.publicKey),M=await (0,i.b6)(o.F,new n.PublicKey(c)),T=parseInt("1"+"0".repeat(M.decimals)),b=await l.methods.stakeTokens(new s.BN(a*T)).accounts({stakePool:m,poolTokenAccount:w,stakeEntry:p,stakeMint:d?.mint,user:e.publicKey,userTokenAccount:P,escrowTokenAccount:await g,tokenProgram:u.x5,associatedTokenProgram:u.EK,systemProgram:n.SystemProgram.programId}).instruction();return y.add(b),y}catch(e){console.log(e)}},P=async(e,a)=>{try{let t=k(e),o=new s.BP(r,r.metadata.address,t),c=await f(e,m),l=new n.Transaction,y=h(m,e?.publicKey),p=await (0,i.Ob)(c?.mint,e?.publicKey),S=await (0,i.Ob)(c?.mint,m,!0),w=await o.methods.unstakeTokens(new s.BN(a*d)).accounts({stakePool:m,poolTokenAccount:S,stakeEntry:y,stakeMint:c?.mint,user:e.publicKey,escrowTokenAccount:await g,userTokenAccount:p,tokenProgram:u.x5,associatedTokenProgram:u.EK,systemProgram:n.SystemProgram.programId}).instruction();return l.add(w),l}catch(e){console.log(e)}},M=async e=>{try{let a=k(e),t=new s.BP(r,r.metadata.address,a),o=await f(e,m),c=new n.Transaction,l=h(m,e?.publicKey),d=await (0,i.Ob)(o?.mint,e?.publicKey),y=await (0,i.Ob)(o?.mint,m,!0),p=await t.methods.claimTokens().accounts({stakePool:m,poolTokenAccount:y,stakeEntry:l,stakeMint:o?.mint,user:e.publicKey,userTokenAccount:d,escrowTokenAccount:await g,tokenProgram:u.x5,associatedTokenProgram:u.EK,systemProgram:n.SystemProgram.programId}).instruction();return c.add(p),c}catch(e){console.log(e)}},T=async(e,a)=>{try{let t=k(e),o=new s.BP(r,r.metadata.address,t),c=await f(e,m),l=new n.Transaction,g=await (0,i.Ob)(c?.mint,e?.publicKey),y=await (0,i.Ob)(c?.mint,m,!0),p=await o.methods.withdrawTokens(new s.BN(a*d)).accounts({stakePool:m,poolTokenAccount:y,stakeMint:c?.mint,user:e.publicKey,userTokenAccount:g,tokenProgram:u.x5,associatedTokenProgram:u.EK,systemProgram:n.SystemProgram.programId}).instruction();return l.add(p),l}catch(e){console.log(e)}},b=async(e,a)=>{try{let t=k(e),o=new s.BP(r,r.metadata.address,t),c=await f(e,m),l=new n.Transaction,g=await (0,i.Ob)(c?.mint,e?.publicKey),y=await (0,i.Ob)(c?.mint,m,!0),p=await o.methods.depositeTokens(new s.BN(a*d)).accounts({stakePool:m,poolTokenAccount:y,stakeMint:c?.mint,user:e.publicKey,userTokenAccount:g,tokenProgram:u.x5,associatedTokenProgram:u.EK,systemProgram:n.SystemProgram.programId}).instruction();return l.add(p),l}catch(e){console.log(e)}},A=async(e,a)=>{try{let t=k(e),o=new s.BP(r,r.metadata.address,t),c=await f(e,m),l=new n.Transaction,g=h(m,a),d=await (0,i.Ob)(c?.mint,m,!0),y=await (0,i.Ob)(c?.mint,a),p=await o.methods.transferBack().accounts({stakePool:m,poolTokenAccount:d,stakeEntry:g,stakeMint:c?.mint,user:e.publicKey,receiverTokenAccount:y,tokenProgram:u.x5,associatedTokenProgram:u.EK,systemProgram:n.SystemProgram.programId}).instruction();return l.add(p),l}catch(e){console.log(e)}},K=async(e,a,t)=>{let o=k(e),i=new s.BP(r,r.metadata.address,o);return await i.methods.initEntry().accounts({stakeEntry:t,stakePool:a,payer:e.publicKey,systemProgram:n.SystemProgram.programId}).instruction()},h=(e,a)=>n.PublicKey.findProgramAddressSync([s.Wp.ee.As.encode("stake-entry"),e.toBuffer(),a.toBuffer()],new n.PublicKey(r.metadata.address))[0];function I(e){let a=e.toString(),t=a.indexOf(".");if(-1===t)return parseFloat(a);let n=a.slice(0,t),s=a.slice(t+1,t+3);return parseFloat(s.length>0?`${n}.${s}`:n)}function v(e,a){return .0019933*e*B(a)}function E(e,a){return e*Math.pow(1.0019933,2*a)-e}let B=e=>{let a=new Date(1e3*e),t=new Date,n=Date.UTC(t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate(),t.getUTCHours(),t.getUTCMinutes(),t.getUTCSeconds()),s=a.getUTCHours();return Math.floor((n-new Date(s>=0&&s<12?a.setUTCHours(0,0,0,0):a.setUTCHours(12,0,0,0)).getTime())/432e5)},O=e=>{let a=e.match(/custom program error: 0x([0-9a-fA-F]+)/);if(!a||!a[1])return e;{let e=parseInt(a[1],16);return console.log(e),(1===e||3012===e?"Not Enough Balance in Wallet":function(e){let a=r.errors.find(a=>a.code===e);return a?a.msg:"Unknown error code"}(e))||"Error message not found for the provided error code"}}},46055:(e,a,t)=>{t.r(a),t.d(a,{default:()=>s});var n=t(88077);let s=async e=>[{type:"image/x-icon",sizes:"256x256",url:(0,n.fillMetadataSegment)(".",await e.params,"favicon.ico")+""}]}};